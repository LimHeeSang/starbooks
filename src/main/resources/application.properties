#server.address=localhost
#server.port=32
# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true
# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=true
# MySQL 을 사용할 것.
spring.jpa.database=mysql
# MySQL 설정
spring.datasource.url=jdbc:mysql://database-1.cn3xci7eyuwr.ap-northeast-2.rds.amazonaws.com/starbooks_db?useSSL=false&serverTimezone=UTC
spring.datasource.username=dlagmltkd12
spring.datasource.password=Qkfkaangbf0!
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


spring.jpa.hibernate.ddl-auto=none


spring.datasource.hikari.max-wait=10000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=600000
spring.datasource.hikari.maximum-pool-size=100